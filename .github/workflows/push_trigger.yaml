name: Deploy AWS EC2 with Terraform and Install Software

on:
  workflow_dispatch:
    inputs:
      vnc_username:
        description: "Enter VNC Username"
        required: true
      vnc_password:
        description: "Enter VNC Password"
        required: true
        type: string

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy EC2 Instance and Install Software
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: latest

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Initialize Terraform
        run: terraform init
        working-directory: terraform

      - name: Apply Terraform
        run: terraform apply -auto-approve
        working-directory: terraform

      - name: Get EC2 Public IP
        id: get_public_ip
        run: |
          PRIVATE_IP=$(terraform output -raw instance_private_ip | grep -oE '([0-9]{1,3}\.){3}[0-9]{1,3}' | head -n 1 | tr -d '\r\n')
          echo "EC2 Private IP: $PUBLIC_IP"
          echo "ec2_ip=$PUBLIC_IP" >> "$GITHUB_ENV"
        working-directory: terraform

      - name: Save PEM Key to File
        run: |
          echo "${{ secrets.KEY_PEM }}" > key.pem
          chmod 600 key.pem

      - name: Wait for EC2 instance to initialize
        run: sleep 60 # Wait for 30 seconds (adjust as needed)

      - name: Copy install.sh to EC2
        run: |
          echo "Changing to repository root..."
          cd $GITHUB_WORKSPACE
          echo "Copying install.sh to EC2..."
          scp -o StrictHostKeyChecking=no -i key.pem terraform/install.sh ubuntu@${{ env.ec2_ip }}:/home/ubuntu/install.sh
        working-directory: terraform

      - name: Run install.sh on EC2
        run: |
          echo "Running install.sh on EC2..."
          ssh -o StrictHostKeyChecking=no -i key.pem ubuntu@${{ env.ec2_ip }} "chmod +x install.sh && sudo ./install.sh '${{ github.event.inputs.vnc_username }}' '${{ github.event.inputs.vnc_password }}'"

      - name: Cleanup PEM Key
        run: rm -f key.pem
